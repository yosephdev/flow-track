"""Increase password column length

Revision ID: 61d412feb38c
Revises: 
Create Date: 2024-04-26 07:55:35.234369

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '61d412feb38c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('public.task')
    op.drop_table('public.category')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('public.category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"public.category_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='public.category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('public.task',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"public.task_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('task_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('task_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_urgent', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['public.category.id'], name='public.task_category_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='public.task_pkey'),
    sa.UniqueConstraint('task_name', name='public.task_task_name_key')
    )
    # ### end Alembic commands ###
